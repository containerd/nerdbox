// Code generated by protoc-gen-go-ttrpc. DO NOT EDIT.
// source: github.com/dmcgowan/nerdbox/api/services/bundle/v1/bundle.proto
package bundle

import (
	context "context"
	ttrpc "github.com/containerd/ttrpc"
)

type TTRPCBundleService interface {
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
}

func RegisterTTRPCBundleService(srv *ttrpc.Server, svc TTRPCBundleService) {
	srv.RegisterService("containerd.vminitd.services.bundle.v1.Bundle", &ttrpc.ServiceDesc{
		Methods: map[string]ttrpc.Method{
			"Create": func(ctx context.Context, unmarshal func(interface{}) error) (interface{}, error) {
				var req CreateRequest
				if err := unmarshal(&req); err != nil {
					return nil, err
				}
				return svc.Create(ctx, &req)
			},
		},
	})
}

type ttrpcbundleClient struct {
	client *ttrpc.Client
}

func NewTTRPCBundleClient(client *ttrpc.Client) TTRPCBundleService {
	return &ttrpcbundleClient{
		client: client,
	}
}

func (c *ttrpcbundleClient) Create(ctx context.Context, req *CreateRequest) (*CreateResponse, error) {
	var resp CreateResponse
	if err := c.client.Call(ctx, "containerd.vminitd.services.bundle.v1.Bundle", "Create", req, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}
