// Code generated by protoc-gen-go-ttrpc. DO NOT EDIT.
// source: github.com/dmcgowan/nerdbox/api/services/system/v1/info.proto
package system

import (
	context "context"
	ttrpc "github.com/containerd/ttrpc"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

type TTRPCSystemService interface {
	Info(context.Context, *emptypb.Empty) (*InfoResponse, error)
}

func RegisterTTRPCSystemService(srv *ttrpc.Server, svc TTRPCSystemService) {
	srv.RegisterService("containerd.vminitd.services.system.v1.System", &ttrpc.ServiceDesc{
		Methods: map[string]ttrpc.Method{
			"Info": func(ctx context.Context, unmarshal func(interface{}) error) (interface{}, error) {
				var req emptypb.Empty
				if err := unmarshal(&req); err != nil {
					return nil, err
				}
				return svc.Info(ctx, &req)
			},
		},
	})
}

type ttrpcsystemClient struct {
	client *ttrpc.Client
}

func NewTTRPCSystemClient(client *ttrpc.Client) TTRPCSystemService {
	return &ttrpcsystemClient{
		client: client,
	}
}

func (c *ttrpcsystemClient) Info(ctx context.Context, req *emptypb.Empty) (*InfoResponse, error) {
	var resp InfoResponse
	if err := c.client.Call(ctx, "containerd.vminitd.services.system.v1.System", "Info", req, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}
